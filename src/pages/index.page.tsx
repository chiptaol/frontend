import Head from 'next/head'
import {
  allSettled,
  fork,
  serialize,
  attach,
  createEvent,
  sample,
} from 'effector'
import { useList } from 'effector-react'
import Link from 'next/link'
import type { GetServerSideProps, NextPage } from 'next'

import {
  PremiereDayPicker,
  premiereDayPickerModel,
} from '~features/premiere-day-picker'
import { premiere, PremiereCard, PremieresSlider } from '~entities/premiere'
import { routesMap } from '~shared/routes'

const Home: NextPage = () => {
  return (
    <>
      <Head>
        <title>Премьеры недели в кинотеатрах</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/logo.svg" />
      </Head>
      <div className="w-full">
        <div className="flex flex-col space-y-5 w-full mb-10">
          <h1 className="text-2xl leading-7 font-extrabold pl-4">
            Премьеры недели
          </h1>
          <PremieresSlider />
        </div>
        <div className="flex flex-col w-full pl-4 space-y-4">
          <h1 className="text-2xl leading-7 font-extrabold">В кинотеатрах</h1>
          <div className="flex flex-col space-y-6 w-full">
            <PremiereDayPicker />
            <PremieresList />
          </div>
        </div>
      </div>
    </>
  )
}

const PremieresList = () => {
  const premieres = useList(premiere.model.$premieres, (premiere) => (
    <Link href={routesMap.premiere(premiere.id)}>
      <a>
        <PremiereCard key={premiere.id} premiere={premiere} />
      </a>
    </Link>
  ))

  return (
    <div className="grid grid-cols-3 gap-3 xs:gap-4 sm:grid-cols-4 sm:gap-5 pr-4">
      {premieres}
    </div>
  )
}

const pageStarted = createEvent()

const fetchPremieresFx = attach({
  effect: premiere.model.fetchPremieresFx,
  source: premiereDayPickerModel.$selectedDay,
  mapParams: (_: void, date) => ({ date }),
})

sample({
  clock: pageStarted,
  target: [premiere.model.fetchActualPremieresFx, fetchPremieresFx],
})

sample({
  source: premiereDayPickerModel.$selectedDay,
  target: fetchPremieresFx,
})

export const getServerSideProps: GetServerSideProps = async () => {
  const scope = fork()

  await allSettled(pageStarted, { scope })

  return {
    props: {
      initialState: serialize(scope),
    },
  }
}

export default Home
