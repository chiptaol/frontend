import { allSettled, createEvent, fork, sample, serialize } from 'effector'
import { useStoreMap } from 'effector-react'
import { useMemo } from 'react'
import Head from 'next/head'
import type { GetServerSideProps } from 'next'

import { MovieTabs } from '~widgets/movie-tabs'
import { movie, MovieOverview } from '~entities/movie'
import { FooterInfo } from '~shared/ui'
import type { NextPageWithLayout } from '~shared/next'

const PremierePage: NextPageWithLayout = () => {
  return (
    <div className="flex flex-col w-full h-full overflow-y-auto">
      <Header />
      <main className="flex-grow">
        <MovieOverview />
        <MovieTabs />
      </main>
      <FooterInfo />
    </div>
  )
}

const Header = () => {
  const movieName = useStoreMap(
    movie.model.$movie,
    (movie) => movie?.title ?? null
  )
  const title = useMemo(() => {
    if (movieName) {
      return `Купить билет на фильм "${movieName}" в Ташкенте, онлайн.`
    }
    return 'Купить билет на фильм в Ташкенте, онлайн.'
  }, [movieName])

  return (
    <Head>
      <title>{title}</title>
      <meta name="description" content="Generated by create next app" />
      <link rel="icon" href="/logo.svg" />
    </Head>
  )
}

const pageStarted = createEvent<{ id: number }>()

sample({
  clock: pageStarted,
  target: movie.model.fetchMovieFx,
})

export const getServerSideProps: GetServerSideProps = async (ctx) => {
  const scope = fork()

  await allSettled(pageStarted, { scope, params: { id: +ctx.params!.pid! } })

  if (!scope.getState(movie.model.$movie)) {
    return {
      notFound: true,
    }
  }

  return {
    props: {
      initialState: serialize(scope),
    },
  }
}

PremierePage.getLayout = (page) => page

export default PremierePage
